{
  "openapi": "3.0.0",
  "info": {
    "description": "InterMine Web Services specifications.",
    "version": "1.0.0",
    "title": "InterMine Web Services",
    "termsOfService": "",
    "contact": {
      "email": "info@intermine.org",
      "url": "http://intermine.org/",
      "name": "InterMine"
    },
    "license": {
      "name": "LGPL 2.1",
      "url": "https://github.com/intermine/intermine/blob/dev/LICENSE"
    }
  },
  "tags": [
    {
      "name": "FacetSearch"
    },
    {
      "name": "User Creation"
    }
  ],
  "paths": {
    "/facets": {
      "get": {
        "summary": "Perform a key-word search and retrieve the facets.",
        "description": "Run a general key-word style search over all data in the data-warehouse. This is similar to Quick Search but here only the facet category counts are returned.",
        "operationId": "facetSearchGet",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "The query string to search with. If absent, or blank, all results will be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list",
            "in": "query",
            "required": false,
            "description": "A list to search within.",
            "schema": {
              "type": "string",
              "default": "{name}"
            }
          },
          {
            "name": "facet_?",
            "in": "query",
            "required": false,
            "description": "A facet parameter, eg facet_Organism=D.melanogaster",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacetSearch"
                }
              }
            }
          }
        },
        "tags": [
          "FacetSearch"
        ]
      },
      "post": {
        "summary": "Perform a key-word search and retrieve the facets.",
        "description": "Run a general key-word style search over all data in the data-warehouse. This is similar to Quick Search but here only the facet category counts are returned.",
        "operationId": "facetSearchPost",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "The query string to search with. If absent, or blank, all results will be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list",
            "in": "query",
            "required": false,
            "description": "A list to search within.",
            "schema": {
              "type": "string",
              "default": "{name}"
            }
          },
          {
            "name": "facet_?",
            "in": "query",
            "required": false,
            "description": "A facet parameter, eg facet_Organism=D.melanogaster",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacetSearch"
                }
              }
            }
          }
        },
        "tags": [
          "FacetSearch"
        ]
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user in the user-profile.",
        "description": "This service allows users of the web service to create a new user account. A user account is required for a number of operations, such as saving lists. This service allows users of the webservice to register an account, and start using these features that require authentication. The username and password provided will be able to be used for future requests, as will an API key provided with the response, which is valid for 24 hours. This is equivalent to the registration mechanism in the web-application interface. Requests to this service are rate limited by IP Address.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "The user name of the new user. It should be an email address if possible. There must not be any user with the same username.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "description": "A password to associate with the account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscribe-to-list",
            "in": "query",
            "required": false,
            "description": "Whether or not to subscribe to the mine's mailing list, if it has one. The username must be an email address if true.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "operationId": "users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "User Creation"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "FacetSearch": {
        "type": "object",
        "properties": {
          "facets": {
            "type": "object"
          },
          "executionTime": {
            "type": "string"
          },
          "wasSuccessful": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object"
          },
          "executionTime": {
            "type": "string"
          },
          "wasSuccessful": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      }
    }
  }
}